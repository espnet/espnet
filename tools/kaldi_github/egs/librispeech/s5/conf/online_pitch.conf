## This config is given by conf/make_pitch_online.sh to the program compute-and-process-kaldi-pitch-feats,
## and is copied by steps/online/nnet2/prepare_online_decoding.sh and similar scripts, to be given
## to programs like online2-wav-nnet2-latgen-faster.
## The program compute-and-process-kaldi-pitch-feats will use it to compute pitch features that
## are the same as that those which will generated in online decoding; this enables us to train
## in a way that's compatible with online decoding.
## 

## most of these options relate to the post-processing rather than the pitch
## extraction itself.
--add-raw-log-pitch=true   ## this is intended for input to neural nets, so our
                           ## approach is "throw everything in and see what
                           ## sticks".
--normalization-left-context=75
--normalization-right-context=50 # We're removing some of the right-context
                                 # for the normalization.   Would normally be 75.
                                 #
                                 # Note: our changes to the (left,right) context
                                 # from the defaults of (75,75) to (75,50) will
                                 # almost certainly worsen results, but will
                                 # reduce latency.
--frames-per-chunk=10    ## relates to offline simulation of online decoding; 1
                         ## would be equivalent to getting in samples one by
                         ## one.
--simulate-first-pass-online=true  ## this make the online-pitch-extraction code
                                   ## output the 'first-pass' features, which
                                   ## are less accurate than the final ones, and
                                   ## which are the only features the neural-net
                                   ## decoding would ever see (since we can't
                                   ## afford to do lattice rescoring in the
                                   ## neural-net code
