language: python

cache:
  - pip
  - ccache

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - cmake
      - python-dev
      - python3-dev
      - g++-7

env:
  global:
    - CC=gcc-7
    - CXX=g++-7
    - TH_VERSION=0.4.1
  matrix:
    - USE_CONDA=false ESPNET_PYTHON_VERSION=2.7
    - USE_CONDA=true ESPNET_PYTHON_VERSION=2.7
    - USE_CONDA=true ESPNET_PYTHON_VERSION=3.7

install:
  - if [[ ${USE_CONDA} == false ]]; then
        pip install http://download.pytorch.org/whl/cpu/torch-${TH_VERSION}-cp27-cp27mu-linux_x86_64.whl ;
    else
        cd tools;
        make -f conda.mk PYTHON_VERSION=${ESPNET_PYTHON_VERSION} venv;
        export PATH=`pwd`/venv/bin:$PATH;
        conda update -y conda;
        conda install -y pytorch-cpu=${TH_VERSION} -c pytorch;
        cd -;
    fi
  - pip install -U pip wheel
  # install espnet
  - pip install -e .
  - pip install -e .[test]
  - pip install -e .[doc]
  # install matplotlib
  - pip install matplotlib
  # install warp-ctc (use @jnishi patched version)
  - git clone https://github.com/jnishi/warp-ctc.git
  - cd warp-ctc && mkdir build && cd build && cmake .. && make -j4 && cd ..
  - pip install cffi
  - cd pytorch_binding && python setup.py install && cd ../.. # maybe need to: apt-get install python-dev
  # install kaldi_io_py
  - cd tools
  - git clone https://github.com/vesis84/kaldi-io-for-python.git
  - cd kaldi-io-for-python
  - ln -s kaldi_io.py kaldi_io_py.py
  - cp ../setup_kaldi-io-for-python.py setup.py
  - pip install .
  - cd ../..
  # install chainer_ctc
  - pip install cython
  - git clone https://github.com/jheymann85/chainer_ctc.git
  - cd chainer_ctc && chmod +x install_warp-ctc.sh && ./install_warp-ctc.sh
  - pip install . && cd ..
  - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:`pwd`/chainer_ctc/ext/warp-ctc/build


script:
  # TODO test coding style?
  - flake8 espnet test
  - autopep8 -r espnet test --global-config .pep8 --diff --max-line-length 120 | tee check_autopep8
  - test ! -s check_autopep8
  - pytest
  - travis-sphinx build --source=doc --nowarn

sudo: false


after_success:
    - travis-sphinx deploy

