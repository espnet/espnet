recipedir: .
num_device: 1
expdir: ${recipedir}/exp/node_${num_nodes}_gpu_${num_device}
statsdir:  ${recipedir}/exp/s2t_stats_raw_bpe50000
vocab_size: 50000
seed: 2024
task: s2t

# load default config
defaults:
  - dataset.yaml
  - conf/default.yaml

parallel:
  env: slurm
  n_workers: 40
  options:
    account: bbjs-delta-cpu
    queue: cpu
    cores: 1
    processes: 4
    memory: 40GB
    death_timeout: 240
    # walltime: 30:00
    job_extra_directives:
      # - "--gres=gpu:1"
      - "--time 24:00:00"
      - "--ntasks-per-node=1"
      - "--cpus-per-task=8"
      - "--output=parallel_log/%j-%x.log"

model:
  _target_: espnet2.s2t.espnet_model.ESPnetS2TModel
  vocab_size: ${vocab_size}
  token_list: ${load_line:sentencepiece_model/tokens.txt}

  normalize: global_mvn
  normalize_conf:
    stats_file: exp/s2t_stats_raw_bpe50000/train/feats_stats.npz

  encoder: e_branchformer
  encoder_conf:
    output_size: 384
    attention_heads: 6
    attention_layer_type: selfattn
    pos_enc_layer_type: abs_pos
    rel_pos_type: latest
    cgmlp_linear_units: 1536
    cgmlp_conv_kernel: 31
    use_linear_after_conv: false
    gate_activation: identity
    num_blocks: 6
    dropout_rate: 0.05
    positional_dropout_rate: 0.05
    attention_dropout_rate: 0.05
    input_layer: conv2d
    layer_drop_rate: 0.0
    linear_units: 1536
    positionwise_layer_type: linear
    use_ffn: true
    macaron_ffn: true
    merge_conv_kernel: 31

  decoder: transformer
  decoder_conf:
    attention_heads: 6
    linear_units: 1536
    num_blocks: 6
    dropout_rate: 0.05
    positional_dropout_rate: 0.05
    self_attention_dropout_rate: 0.05
    src_attention_dropout_rate: 0.05

  model_conf:
    ctc_weight: 0.3
    lsm_weight: 0.1
    length_normalized_loss: false
    sym_na: <na>

  frontend: default
  frontend_conf:
    n_fft: 512
    win_length: 400
    hop_length: 160
    fs: 16k
  
  specaug: specaug
  specaug_conf:
    apply_time_warp: false
    time_warp_window: 5
    time_warp_mode: bicubic
    apply_freq_mask: true
    freq_mask_width_range:
    - 0
    - 27
    num_freq_mask: 1
    apply_time_mask: true
    time_mask_width_ratio_range:
    - 0.0
    - 0.05
    num_time_mask: 1

optim:
  _target_: torch.optim.AdamW
  lr: 0.001

scheduler:
  _target_: espnet2.schedulers.piecewise_linear_warmup_lr.PiecewiseLinearWarmupLR
  warmup_steps_list:
    - 0
    - 30000
    - 60000
  warmup_lr_list:
    - 0.0
    - 0.0001
    - 0.001
  
dataloader:
  train:
    multiple_iterator: true
    num_shards: 12
    iter_factory:
    batch_size: 32
    shuffle: true
    num_workers: 16
  valid:
    iter_factory:
    batch_size: 32
    shuffle: false
    num_workers: 16

trainer:
  max_epochs: 30
  precision: bf16-mixed
  accumulate_grad_batches: 8
  log_every_n_steps: 800 # consistent with espnet
  limit_train_batches: 40000

  logger:
    - _target_: lightning.pytorch.loggers.TensorBoardLogger
      save_dir: ${expdir}/tensorboard
      name: tb_logger

    - _target_: lightning.pytorch.loggers.WandbLogger
      project: OWSM Debug Run for ESPnet-3
      save_dir: ${expdir}/wandb
      name: node_${num_nodes}_gpu_${num_device}

  strategy:
    _target_: lightning.pytorch.strategies.DeepSpeedStrategy
    allgather_bucket_size: 5e8
    reduce_bucket_size: 5e8
    config: conf/deepspeed.json

# If you want to resume training use the following config.
# fit:
#   ckpt_path: ${expdir}/last.ckpt
