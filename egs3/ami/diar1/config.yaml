recipedir: .
num_device: 1 #${oc.env:N_GPU}
expdir: ${recipedir}/exp/gpu${num_device}
statsdir:  ${recipedir}/exp/stats
seed: 777

parallel:
  env: slurm
  n_workers: 32
  options:
    account: bbjs-delta-cpu
    queue: cpu
    cores: 1
    processes: 4
    memory: 16GB
    walltime: 30:00
    job_extra_directives:
      # - "--gres=gpu:1"
      - "--ntasks-per-node=1"
      - "--cpus-per-task=16"
      - "--output=parallel_log/%j-%x.log"


# put here your path to AMI root folder
ami_root: /raid/users/popcornell/AMI
features:
  num_mel_bins: 23
  chunk_size: 30 # train on 120 seconds. The sequence length will be:
  hop: 30 # 120000 / 10 (stft stride) / 10 (network frontend stride) = 1200. We can probably increase it further !
  # half a second hop for extracting features #FIXME
  # we can apply specaugm in dataloader

synth_multispk_data:
  librispeech_dir: /raid/users/popcornell/LibriSpeech # path to LibriSpeech main directory
  output_dir: ./data/librispeech_synth
  num_conversations: 1000 # for debugging purposes
  num_utterances_per_conversation: 30
  num_speakers_per_conversation: [2, 6] # matching AMI
  n_workers: 16
  max_utterance_duration: 60
  min_utterance_duration: 0.1

dataset:
  _target_: espnet3.data.DataOrganizer
  train:
    - name: ami-ihm-mix-train
      dataset:
        _target_: egs3.ami.diar1.dataset.dataset.DiarCutSet
        split: ami-ihm-mix-train
        is_training: True
    #- name: ami-sdm-train
    #  dataset:
    #    _target_: egs3.ami.diar1.dataset.dataset.DiarCutSet
    #    split: ami-sdm-train
    #    is_training: True
    #- name: ami-mdm-train
    #  dataset:
    #    _target_: egs3.ami.diar1.dataset.dataset.DiarCutSet
    #    split: ami-mdm-train
    #    is_training: True
  valid:
    - name: ami-ihm-mix-dev
      dataset:
        _target_: egs3.ami.diar1.dataset.dataset.DiarCutSet
        split: ami-ihm-mix-dev
  test:
    - name: ami-ihm-mix-test
      dataset:
        _target_: egs3.ami.diar1.dataset.dataset.DiarCutSet
        split: ami-ihm-mix-test

model:
   _target_: egs3.ami.diar1.model.VanillaEENDModelWrapper
   frontend:
      _target_: egs3.ami.diar1.model.ConvFrontEnd
      n_mels: 23
      in_ksz: 15
      in_stride: 10
      emb_size: 256 # should match encoder and decoder value for internal state
      dropout: 0.1
      pos_enc_ksz: 51 # 5 seconds relative pos

   encoder:
     _target_: espnet2.asr.encoder.transformer_encoder.TransformerEncoder
     input_size: 256
     output_size: 256
     attention_heads: 4
     linear_units: 1024
     num_blocks: 6
     dropout_rate:  0.1
     positional_dropout_rate: 0.1
     attention_dropout_rate: 0.0
     input_layer:
     pos_enc_class:
     normalize_before: True
     concat_after: False
     positionwise_layer_type: "linear"
     positionwise_conv_kernel_size: 1
     padding_idx:  -1
     use_flash_attn: False

   decoder:
      _target_: egs3.ami.diar1.model.UpSamplingDecoder
      n_local_spk: 5 # note this should be maximum speakers in the dataset !
      emb_size: 256

   lossfunc:
      _target_: egs3.ami.diar1.model.MaskedBinaryXentropyWithLogits
      balance_spk: False

   log_der_train: True # this mainly for debug. remove for speeding up training. #FIXME

optim:
  _target_: torch.optim.Adam
  lr: 0.0001
  weight_decay: 0.0

scheduler:
  _target_: espnet2.schedulers.warmup_lr.WarmupLR
  warmup_steps: 5000

dataloader:
  collate_fn:
    _target_: espnet2.train.collate_fn.CommonCollateFn
    int_pad_value: -1
  train:
    iter_factory:
    batch_size: 32
    shuffle: True
    num_workers: 16
  valid:
    iter_factory:
    batch_size: 1
    shuffle: False
    num_workers: 8

best_model_criterion:
  - [valid/loss, 3, min]

trainer:
  accelerator: gpu
  devices: ${num_device}
  num_nodes: 1
  precision: bf16-mixed
  accumulate_grad_batches: 1
  gradient_clip_val: 5.0
  log_every_n_steps: 20
  max_epochs: 20

  logger:
    - _target_: lightning.pytorch.loggers.TensorBoardLogger
      save_dir: ${expdir}/tensorboard
      name: tb_logger

    - _target_: lightning.pytorch.loggers.WandbLogger
      project: ESPnet3 development
      save_dir: ${expdir}/wandb
      name: AMI_EEND

  strategy: auto

test:
  - name: ami-ihm-mix-test
  - name: ami-mdm-test