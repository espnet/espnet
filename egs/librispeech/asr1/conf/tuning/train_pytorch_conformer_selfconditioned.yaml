# Sample config for "Relaxing the Conditional Independence Assumption of CTC-based ASR by Conditioning on Intermediate Predictions"
# https://arxiv.org/abs/2104.02724

# network architecture
# encoder related
elayers: 18
eunits: 2048
# decoder related
# NOTE: we don't use any decoder as `mtlalpha == 1.0`.
dlayers: 0
dunits: 2048
# attention related
adim: 256
aheads: 4

# hybrid CTC/attention
# 1.0: CTC only
mtlalpha: 1.0

# label smoothing
lsm-weight: 0.1

# minibatch related
batch-size: 32
maxlen-in: 512  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 150 # if output length > maxlen-out, batchsize is automatically reduced

# optimization related
sortagrad: 0 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: noam
accum-grad: 2
grad-clip: 5
patience: 0
epochs: 100
dropout-rate: 0.1

# transformer specific setting
backend: pytorch
model-module: "espnet.nets.pytorch_backend.e2e_asr_transformer:E2E"
transformer-input-layer: conv2d     # encoder architecture type
transformer-lr: 5.0  # 10.0 may be too large for CTC-only models
transformer-warmup-steps: 25000
transformer-attn-dropout-rate: 0.0
transformer-length-normalized-loss: false
transformer-init: pytorch

# intermediate CTC + stochastic depth
intermediate-ctc-layer: '3,6,9,12,15'
intermediate-ctc-weight: 0.5
stochastic-depth-rate: 0.0
self-conditioning: true

# Report CER & WER
report-cer: true
report-wer: true
