# Config based on train_fastspeech.v2 + postnet.
# This config requies only a single GPU with 12GB memory.
# It takes around ~2 days to finish the training.

# network architecture related
model-module: espnet.nets.pytorch_backend.e2e_tts_fastspeech:FeedForwardTransformer
adim: 384
aheads: 2
elayers: 6
eunits: 1536
dlayers: 6
dunits: 1536
duration-predictor-layers: 2
duration-predictor-chans: 256
duration-predictor-kernel-size: 3
positionwise-layer-type: conv1d
positionwise-conv-kernel-size: 3
postnet-layers: 5
postnet-filts: 5
postnet-chans: 256
use-batch-norm: True
use-scaled-pos-enc: True
encoder-normalize-before: False
decoder-normalize-before: False
encoder-concat-after: False
decoder-concat-after: False
reduction-factor: 1

# minibatch related
batch-sort-key: input # shuffle or input or output
batch-bins: 1012000   # 350 batches containing from 15 to 71 samples (avg 28 samples).

# training related
transformer-init: pytorch
transformer-warmup-steps: 4000
transformer-lr: 1.0
initial-encoder-alpha: 1.0
initial-decoder-alpha: 1.0
transformer-enc-dropout-rate: 0.1
transformer-enc-positional-dropout-rate: 0.1
transformer-enc-attn-dropout-rate: 0.1
transformer-dec-dropout-rate: 0.1
transformer-dec-positional-dropout-rate: 0.1
transformer-dec-attn-dropout-rate: 0.1
transformer-enc-dec-attn-dropout-rate: 0.1
postnet-dropout-rate: 0.5
duration-predictor-dropout-rate: 0.1
transfer-encoder-from-teacher: False

# optimization related
opt: noam
accum-grad: 3
grad-clip: 1.0
weight-decay: 0.0
patience: 0
epochs: 700  # 700 epochs * 350 batches / 2 accum-grad = 122,500 iters
teacher-model: exp/train_no_dev_pytorch_train_pytorch_transformer.v1.single/results/model.last1.avg.best

# other
save-interval-epoch: 50
