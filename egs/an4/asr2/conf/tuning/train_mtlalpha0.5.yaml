# network architecture
frontend-module: "espnet.nets.pytorch_backend.frontend_asr:FrontendASR"
# beamformer related
use-beamformer: true
beamformer-layers: 3
beamformer-units: 300
beamformer-projs: 300
beamformer-ref-channel: -1  # Specified ref mic for beamformer. If <0, use attention dnn

# encoder related
etype: vggblstmp     # encoder architecture type
elayers: 3
eunits: 1024
eprojs: 1024
subsample: "1_1_1" # skip every n frame from input to nth layers
# decoder related
dlayers: 1
dunits: 1024
# attention related
atype: location
adim: 1024
aconv-chans: 10
aconv-filts: 100

# hybrid CTC/attention
mtlalpha: 0.5

# minibatch related
batch-size: 10
maxlen-in: 600  # if input length  > maxlen_in, batchsize is automatically reduced
maxlen-out: 150 # if output length > maxlen_out, batchsize is automatically reduced

# optimization related
sortagrad: 0 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: adadelta
epochs: 25
patience: -1

# scheduled sampling option
sampling-probability: 0.0
