# This is tactron2 training setting for debugging

# encoder related
embed-dim: 4
elayers: 1
eunits: 4
econv-layers: 1 # if set 0, no conv layer is used
econv-chans: 4
econv-filts: 3

# decoder related
dlayers: 1
dunits: 4
prenet-layers: 1  # if set 0, no prenet is used
prenet-units: 4
postnet-layers: 1 # if set 0, no postnet is used
postnet-chans: 4
postnet-filts: 3

# attention related
atype: location
adim: 4
aconv-chans: 4
aconv-filts: 1       # resulting in filter-size = aconv-filts * 2 + 1
cumulate-att-w: true # whether to cumulate attetion weight
use-batch-norm: true # whether to use batch normalization in conv layer
use-concate: true    # whether to concatenate encoder embedding with decoder lstm outputs
use-residual: false  # whether to use residual connection in encoder convolution
use-masking: true    # whether to mask the padded part in loss calculation
bce-pos-weight: 1.0  # weight for positive samples of stop token in cross-entropy calculation
reduction-factor: 4

# minibatch related
batch-size: 2
batch-sort-key: shuffle # shuffle or input or output
maxlen-in: 150     # if input length  > maxlen-in, batchsize is reduced (if use "shuffle", not effect)
maxlen-out: 400    # if output length > maxlen-out, batchsize is reduced (if use "shuffle", not effect)

# optimization related
lr: 1e-3
eps: 1e-6
weight-decay: 0.0
dropout-rate: 0.5
zoneout-rate: 0.1
epochs: 3
patience: 2
