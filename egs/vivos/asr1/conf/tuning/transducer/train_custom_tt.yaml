# minibatch related
batch-size: 30
maxlen-in: 500
maxlen-out: 150

# optimization related
criterion: loss
early-stop-criterion: "validation/main/loss"
sortagrad: 0
opt: noam
epochs: 20
patience: 0
accum-grad: 4

# transformer related
transformer-lr: 8.0
transformer-warmup-steps: 8000

# network architecture
## encoder related
etype: transformer
transformer-enc-input-layer: linear
enc-block-arch:
        - type: tdnn
          idim: 512
          odim: 512
          ctx_size: 3
          dilation: 1
          stride: 1
          use-relu: True
        - type: tdnn
          idim: 512
          odim: 512
          ctx_size: 3
          dilation: 1
          stride: 1
          use-relu: True
        - type: transformer
          d_hidden: 512
          d_ff: 512
          heads: 8
          dropout-rate: 0.2
        - type: tdnn
          idim: 512
          odim: 512
          ctx_size: 3
          dilation: 3
          stride: 1
          use-relu: True
        - type: tdnn
          idim: 512
          odim: 512
          ctx_size: 3
          dilation: 3
          stride: 1
          use-relu: True
        - type: transformer
          d_hidden: 512
          d_ff: 512
          heads: 8
          dropout-rate: 0.2
        - type: tdnn
          idim: 512
          odim: 512
          ctx_size: 3
          dilation: 3
          stride: 1
          use-relu: True
        - type: tdnn
          idim: 512
          odim: 512
          ctx_size: 3
          dilation: 3
          stride: 3
          use-relu: True
        - type: transformer
          d_hidden: 512
          d_ff: 512
          heads: 4
          dropout-rate: 0.2
## decoder related
dtype: transformer
transformer-dec-input-layer: embed
dec-block-arch:
        - type: causal-conv1d
          idim: 100
          odim: 256
          kernel_size: 5
        - type: transformer
          d_hidden: 256
          d_ff: 1024
          heads: 8
## joint network related
joint-dim: 256
# transducer related
rnnt-mode: 'rnnt' # switch to 'rnnt-att' to use transducer with attention
model-module: "espnet.nets.pytorch_backend.e2e_asr_transducer:E2E"
