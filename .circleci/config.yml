# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
workflows:
  version: 2
  test:
    jobs:
      # TODO(karita): support tests without conda
      - test-ubuntu18
      - test-ubuntu16
      - test-centos7
      - test-debian9

jobs:
  test-ubuntu18:
    docker:
      - image: circleci/buildpack-deps:18.04
        environment:
          ESPNET_PYTHON_VERSION: 3.6
          TH_VERSION: 1.5.0
          CHAINER_VERSION: 6.0.0
          USE_CONDA: true
          CC: gcc-7
          CXX: g++-7
          # To avoid UnicodeEncodeError for python<=3.6
          LC_ALL: en_US.UTF-8
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo apt-get update -qq
            sudo apt-get install -qq -y cmake g++-7 libsndfile1-dev bc
            sudo localedef -f UTF-8 -i en_US en_US
      - run:
          name: install espnet
          command: |
            ./ci/install.sh
      - run:
          name: test shell
          command: |
            ./ci/test_shell.sh
      - run:
          name: test python
          command: |
            ./ci/test_python.sh
      - run:
          name: install kaldi
          command: |
            ./ci/install_kaldi.sh
      - run:
          name: test integration
          command: |
            ./ci/test_integration.sh
      - run:
          name: codecov
          command: |
            source ./tools/venv/bin/activate
            bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: egs/mini_an4/asr1/exp

  test-ubuntu16:
    docker:
      - image: circleci/buildpack-deps:16.04
        environment:
          ESPNET_PYTHON_VERSION: 3.6
          TH_VERSION: 1.5.0
          CHAINER_VERSION: 6.0.0
          USE_CONDA: true
          CC: gcc-7
          CXX: g++-7
          # To avoid UnicodeEncodeError for python<=3.6
          LC_ALL: en_US.UTF-8
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo apt-get update -qq
            sudo apt-get install -y software-properties-common
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            sudo apt-get update -qq
            sudo apt-get install -qq -y cmake g++-7 libsndfile1-dev bc
            sudo localedef -f UTF-8 -i en_US en_US
      - run:
          name: install espnet
          command: |
            ./ci/install.sh
      - run:
          name: test shell
          command: |
            ./ci/test_shell.sh
      - run:
          name: test python
          command: |
            ./ci/test_python.sh
      - run:
          name: install kaldi
          command: |
            ./ci/install_kaldi.sh
      - run:
          name: test integration
          command: |
            ./ci/test_integration.sh
      - run:
          name: codecov
          command: |
            source ./tools/venv/bin/activate
            bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: egs/mini_an4/asr1/exp

  test-centos7:
    docker:
      - image: centos:7
        environment:
          ESPNET_PYTHON_VERSION: 3.6
          TH_VERSION: 1.5.0
          CHAINER_VERSION: 6.0.0
          USE_CONDA: true
          CC: /opt/rh/devtoolset-7/root/usr/bin/gcc
          CXX: /opt/rh/devtoolset-7/root/usr/bin/g++
          # To avoid UnicodeEncodeError for python<=3.6
          LC_ALL: en_US.UTF-8
    working_directory: ~/repo

    steps:
      - run:
          name: install dependencies
          command: |
            yum install -y git centos-release-scl cmake libsndfile make bzip2 wget which unzip bc
            yum-config-manager --enable rhel-server-rhscl-7-rpms
            yum install -y devtoolset-7-gcc-c++
            localedef -f UTF-8 -i en_US en_US
      - checkout
      - run:
          name: install espnet
          command: |
            # NOTE(karita) this line exited 1
            # source scl_source enable devtoolset-7
            PATH="/opt/rh/devtoolset-7/root/usr/bin:${PATH:-}"
            ./ci/install.sh
      - run:
          name: test shell
          command: |
            PATH="/opt/rh/devtoolset-7/root/usr/bin:${PATH:-}"
            ./ci/test_shell.sh
      - run:
          name: test python
          command: |
            PATH="/opt/rh/devtoolset-7/root/usr/bin:${PATH:-}"
            ./ci/test_python.sh
      # - run:
      #     name: install kaldi
      #     command: |
      #       # TODO(karita) centos7 featbin binary
      #       PATH="/opt/rh/devtoolset-7/root/usr/bin:${PATH:-}"
      #       ./ci/install_kaldi.sh
      # - run:
      #     name: test integration
      #     command: |
      #       ./ci/test_integration.sh
      - run:
          name: codecov
          command: |
            source ./tools/venv/bin/activate
            bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: egs/mini_an4/asr1/exp

  test-debian9:
    docker:
      - image: debian:9
        environment:
          ESPNET_PYTHON_VERSION: 3.6
          TH_VERSION: 1.5.0
          CHAINER_VERSION: 6.0.0
          USE_CONDA: true
          CC: gcc-6
          CXX: g++-6
          # To avoid UnicodeEncodeError for python<=3.6
          LC_ALL: en_US.UTF-8
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            apt-get update -qq
            apt-get install -qq -y git cmake g++-6 libsndfile1-dev unzip bzip2 wget curl bc locales
            localedef -f UTF-8 -i en_US en_US
      - run:
          name: install espnet
          command: |
            ./ci/install.sh
      - run:
          name: test shell
          command: |
            ./ci/test_shell.sh
      - run:
          name: test python
          command: |
            ./ci/test_python.sh
      - run:
          name: install kaldi
          command: |
            ./ci/install_kaldi.sh
      - run:
          name: test integration
          command: |
            ./ci/test_integration.sh
      - run:
          name: codecov
          command: |
            source ./tools/venv/bin/activate
            bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: egs/mini_an4/asr1/exp
