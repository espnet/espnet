# network architecture

optim: adam
optim_conf:
    lr: 0.000001
scheduler: warmuplr     # pytorch v1.1.0+ required #Tune warmup steps
scheduler_conf:
    warmup_steps: 1000
max_epoch: 50
batch_size: 64
accum_grad: 2

freeze_param: [
"frontend.upstream.upstream.model.feature_extractor"
]

frontend: s3prl
frontend_conf:
    frontend_conf:
        upstream: hubert_large_ll60k # Note: If the upstream is changed, please change the input_size in the preencoder.
    download_dir: ./hub
    multilayer_feature: True

model_conf:
    ctc_weight: 0.0
    lsm_weight: 0.0
    length_normalized_loss: false
    superb_setup: true
    num_class: 3
    ssl_input_size: 1024
    extract_feats_in_collect_stats: false   # Note: "False" means during collect stats (stage 10), generating dummy stats files rather than extract_feats by forward frontend.
unused_parameters: true
specaug: specaug
specaug_conf:
    apply_time_warp: true
    time_warp_window: 5
    time_warp_mode: bicubic
    apply_freq_mask: true
    freq_mask_width_range:
    - 0
    - 30
    num_freq_mask: 2
    apply_time_mask: true
    time_mask_width_range:
    - 0
    - 40
    num_time_mask: 2

best_model_criterion:
-   - valid
    - loss
    - min
keep_nbest_models: 10
