# network architecture
# encoder related
encoder: conformer
encoder_conf:
    output_size: 512
    attention_heads: 8
    linear_units: 2048
    num_blocks: 12
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0.1
    input_layer: conv2d
    normalize_before: true
    macaron_style: true
    pos_enc_layer_type: "rel_pos"
    selfattention_layer_type: "rel_selfattn"
    activation_type: "swish"
    use_cnn_module:  true
    cnn_module_kernel: 31

decoder: transformer
decoder_conf:
    attention_heads: 8
    linear_units: 2048
    num_blocks: 6
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    self_attention_dropout_rate: 0.1
    src_attention_dropout_rate: 0.1

postencoder: hugging_face_transformers
postencoder_conf:
    # pick up a model from https://huggingface.co/models?filter=transformers
    # most of models should work, but maybe some don't
    # known to work: bert, gpt2, xlnet, roberta, mpnet, t5, bart
    # xlnet currently works for single gpu only
    model_name_or_path: "bert-base-uncased"

freeze_param: [
"postencoder.transformer"
]

optim: adam
optim_conf:
    lr: 0.0002
scheduler: warmuplr     # pytorch v1.1.0+ required #Tune warmup steps
scheduler_conf:
    warmup_steps: 25000
max_epoch: 50

model_conf:
    ctc_weight: 0.3
    lsm_weight: 0.1
    length_normalized_loss: false
    extract_feats_in_collect_stats: false   # Note: "False" means during collect stats (stage 10), generating dummy stats files rather than extract_feats by forward frontend.

specaug: specaug
specaug_conf:
    apply_time_warp: true
    time_warp_window: 5
    time_warp_mode: bicubic
    apply_freq_mask: true
    freq_mask_width_range:
    - 0
    - 30
    num_freq_mask: 2
    apply_time_mask: true
    time_mask_width_range:
    - 0
    - 40
    num_time_mask: 2

best_model_criterion:
-   - valid
    - acc
    - max
keep_nbest_models: 10
