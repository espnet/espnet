token_type: word

optim: adamw
optim_conf:
    lr: 1.0e-4
    weight_decay: 1.0e-2
    betas: [0.9, 0.98]

accum_grad: 1

batch_size: 128 # 12.5 steps per epoch with 1600 samples
max_epoch: 1000

scheduler: CosineAnnealingWarmupRestarts
scheduler_conf:
    first_cycle_steps: 6000
    warmup_steps: 300
    max_lr: 1.0e-4
    min_lr: 5.0e-6

# BEATs implementation takes care of generating mel spectrogram, normalization and specaug
frontend: none
input_size: 1 # important to set input_size to 1 if frontend is none
normalize: none # BEATs code does global mean and variance normalization

# Initialization for the decoder
init: xavier_normal

model_conf:
    ctc_weight: 0.0  # No CTC, no attention.
    lsm_weight: 0.1  # label smoothing weight
    length_normalized_loss: true

batch_type: folded
unused_parameters: true
grad_clip: 1
patience: none
best_model_criterion:
-   - valid
    - acc
    - max
keep_nbest_models: 1
use_amp: false  # whether to use automatic mixed precision
num_att_plot: 0
num_workers: 2 # dataloader workers

encoder: beats
encoder_conf:
    # Please download the BEATs model from https://github.com/microsoft/unilm/tree/master/beats
    # (iter3) and update the path below
    beats_ckpt_path: /compute/babel-13-33/sbharad2/models/BEATs/BEATs_iter3.pt
    # Most values from Appendix A.1 of the BEATs paper or tuned on fold 5.
    # Please also check the README.md
    fbank_mean: 11.72215
    fbank_std: 10.60431
    beats_config:
        layer_wise_gradient_decay_ratio: 0.2
        encoder_layerdrop: 0.1
        dropout: 0.0
    specaug_config:
        apply_time_warp: true
        apply_freq_mask: false
        apply_time_mask: true
        time_mask_width_ratio_range:
        - 0
        - 0.06
        num_time_mask: 1
    roll_augment: true
    roll_interval: 16000 # 1 second, only 5 possible augmentations per sample
    use_weighted_representation: false

# Simple linear decoder for classification.
decoder: linear_decoder
decoder_conf:
    pooling: mean
    dropout: 0.1
