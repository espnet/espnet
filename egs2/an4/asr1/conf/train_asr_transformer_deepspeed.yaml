# A toy example of how DeepSpeed is used in ESPnet.
# With DeepSpeed, users only need to specify the model- and dataloader-realted items.
# Other configs should be specified in deepspeed_config file, such as:
# * optimization
# * training dtype or automatic mixed precision (AMP) setup
# * gradient accumulation
# * gradient clip
# * model saving and loading
# * learning rate scheduler
# * ...
#
# With DeepSpeed, one can also use some advanced trainer features, such as:
# * ZeRO-1/2/3 optimization
# * parameter offload
# * activation checkpointing
# * ...
# So that a very large model can be trained easily.
#
# The provided conf/deepspeed_zero2.json only contains a simple use case of DeepSpeed.
# Based on model arch and cluster feature, advanced users are encouraged to tune the
# config file following the official documents: https://deepspeed.readthedocs.io/en/latest/
#
# Note: the batch size-related setup is up to ESPnet dataloader settings rather than
#       those specified in DeepSpeed config.
#
# Before training with DeepSpeed, make sure it has been installed.
# DeepSpeed will compile some torch extensions when you use them for the first time. So make
# sure you have ${CUDA_HOME} in your environment variables that contain a complete CUDA
# installation that is compatible with your pytorch CUDA. The compatibility requirement is
# only about the major CUDA version. E.g., CUDA 11.x are always compatible with each other.

use_deepspeed: true
deepspeed_config: conf/deepspeed_zero2.json

batch_type: folded
batch_size: 64
max_epoch: 200

encoder: transformer
encoder_conf:
    output_size: 256
    attention_heads: 4
    linear_units: 2048
    num_blocks: 12
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0.0
    input_layer: conv2d
    normalize_before: true

decoder: transformer
decoder_conf:
    attention_heads: 4
    linear_units: 2048
    num_blocks: 6
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    self_attention_dropout_rate: 0.0
    src_attention_dropout_rate: 0.0

model_conf:
    ctc_weight: 0.3
    lsm_weight: 0.1
    length_normalized_loss: false
