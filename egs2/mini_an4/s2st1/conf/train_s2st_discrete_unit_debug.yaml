# =====================
# Network Architecture
# =====================

s2st_type: discrete_unit

# Frontend
frontend: default
frontend_conf:
    n_fft: 512
    win_length: 400
    hop_length: 160

# Tgt feats extract
tgt_feats_extract: None
output_size: 5

# Encoder
encoder: transformer
encoder_conf:
    input_layer: "conv2d2"
    num_blocks: 2
    linear_units: 4
    dropout_rate: 0.1
    output_size: 4
    attention_heads: 2
    attention_dropout_rate: 0.0
    normalize_before: true

# ASR CTC
asr_ctc: true

# ASR Decoder
asr_decoder: transformer
asr_decoder_conf:
    input_layer: "embed"
    num_blocks: 2
    linear_units: 4
    attention_heads: 2

st_decoder: transformer
st_decoder_conf:
    input_layer: "embed"
    num_blocks: 2
    linear_units: 4
    attention_heads: 4

# Synthesizer
synthesizer: discrete_unit
synthesizer_conf:
    input_layer: "embed"
    num_blocks: 2
    linear_units: 4
    attention_heads: 2

# =====================
# Training Related
# =====================

# Loss-related
losses:
    - name: asr_ctc
      type: ctc
      conf:
        weight: 1.6
    - name: src_attn
      type: attention
      conf:
        weight: 8.0
        smoothing: 0.2
        padding_idx: -1
    - name: tgt_attn
      type: attention
      conf:
        weight: 8.0
        smoothing: 0.2
        padding_idx: -1
    - name: synthesis
      type: attention
      conf:
        weight: 1.6
        smoothing: 0.2
        padding_idx: -1

# Optimization
optim: adamw
accum_grad: 1
grad_clip: 1.0
grad_noise: false
optim_conf:
    lr: 0.0005
    eps: 1.0e-06
scheduler: warmuplr
scheduler_conf:
   warmup_steps: 2

# Batching
batch_type: sorted
batch_size: 2
sort_in_batch: descending   # how to sort data in making batch
sort_batch: descending      # how to sort created batches

# Other Training Setting
# num_iters_per_epoch: 1000
max_epoch: 3
num_workers: 0
log_interval: null
seed: 0
num_att_plot: 0
best_model_criterion:
-   - valid
    - loss
    - min
-   - train
    - loss
    - min
keep_nbest_models: 2
